<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<!--

0) check you have the required SRTM file in ./data/srtm
1) check alt = ground_alt + AGL(above ground level)
2) set lat0 lon0 
3) the polygon sweep angle (initializeploygonsurvey)
4) open with flightplan editor and check every important waypoint: 

 -->

<flight_plan alt="75" ground_alt="0" lat0="43.4622" lon0="1.2729" max_dist_from_home="1500" name="Versatile" qfu="270" security_height="25">
  <header>
#include "subsystems/navigation/nav_line.h"
#include "subsystems/navigation/OSAMNav.h"
#include "subsystems/datalink/datalink.h"

#define PHOTOGRAMMETRY_SWEEP_ANGLE 53		// Degrees from the North
#define PHOTOGRAMMETRY_OVERLAP 50		// 1-99 Procent
#define PHOTOGRAMMETRY_SIDELAP 50		// 1-99 Procent
#define PHOTOGRAMMETRY_RESOLUTION 80		// mm pixel projection size
// Automatic include of camera trigger if camera is present and only take pictures inside polygon
#include "generated/airframe.h"
#ifdef DC_AUTOSHOOT_QUARTERSEC_PERIOD
#include "modules/digital_cam/dc.h"
#define LINE_START_FUNCTION dc_autoshoot = DC_AUTOSHOOT_PERIODIC;
#define LINE_STOP_FUNCTION dc_autoshoot = DC_AUTOSHOOT_STOP;
#endif
</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="STDBY" x="20" y="80"/>
    <waypoint name="1" x="6.4" y="-109.1"/>
    <waypoint name="2" x="381.7" y="120.8"/>
    <waypoint name="3" x="175.3" y="648.5"/>
    <waypoint name="4" x="-421.1" y="549.4"/>
    <waypoint name="5" x="28.9" y="-368.5"/>
    <waypoint name="6" x="-327.8" y="-599.0"/>
    <waypoint name="7" x="-1041.5" y="-397.3"/>
    <waypoint name="8" x="-886.1" y="116.3"/>
    <waypoint name="9" x="25.7" y="73.8"/>
    <waypoint name="S1" x="-435.9" y="572.4"/>
    <waypoint name="S2" x="394.2" y="-45.4"/>
    <waypoint name="MOB" x="-11.5" y="-21.2"/>
    <waypoint alt="30" name="AF" x="200" y="-10"/>
    <waypoint alt="0" name="TD" x="80.0" y="20.0"/>
    <waypoint name="BASELEG" x="26.9" y="-23.0"/>
    <waypoint name="_1" x="-100" y="0"/>
    <waypoint name="_2" x="-100" y="200"/>
    <waypoint name="_3" x="100" y="200"/>
    <waypoint name="_4" x="100" y="0"/>
    <waypoint name="CLIMB" x="-122.5" y="35.4"/>
  </waypoints>
  <sectors>
    <sector name="PolySector1234">
      <corner name="1"/>
      <corner name="2"/>
      <corner name="3"/>
      <corner name="4"/>
    </sector>
    <sector name="PolySector5678">
      <corner name="5"/>
      <corner name="6"/>
      <corner name="7"/>
      <corner name="8"/>
      <corner name="9"/>
    </sector>
  </sectors>
  <exceptions/>
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <set value="1" var="kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
    <block name="Takeoff" strip_icon="takeoff.png" strip_button="Takeoff (wp CLIMB)">
      <exception cond="estimator_z > ground_alt+25" deroute="Standby"/>
      <set value="0" var="kill_throttle"/>
      <go wp="CLIMB"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <circle radius="nav_radius" wp="STDBY"/>
    </block>
    <block name="Figure 8 around wp 1" strip_button="Figure 8 (wp 1-2)" strip_icon="eight.png">
      <eight center="1" radius="nav_radius" turn_around="2"/>
    </block>
    <block name="Oval 1-2" strip_button="Oval (wp 1-2)" strip_icon="oval.png">
      <oval p1="S1" p2="S2" radius="nav_radius"/>
    </block>
    <block name="MOB" strip_button="Turn around here" strip_icon="mob.png">
      <call fun="NavSetWaypointHere(WP_MOB)"/>
      <circle radius="100" wp="MOB"/>
    </block>

    <block name="Survey S1-S2" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="150" wp1="S1" wp2="S2"/>
    </block>
    <block name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="Land Left AF-TD" strip_button="Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <call fun="nav_compute_baseleg(WP_AF, WP_TD, WP_BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() > 0.5" wp="BASELEG"/>
      <set value="V_CTL_AUTO_THROTTLE_MIN_CRUISE_THROTTLE" var="v_ctl_auto_throttle_cruise_throttle"/>
      <circle radius="nav_radius" until="NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10) && 10 > fabs(estimator_z - WaypointAlt(WP_BASELEG))" wp="BASELEG"/>
    </block>
    <block name="final">
      <go from="AF" hmode="route" throttle="0.0" wp="TD"/>
    </block>

    <block name="Test datalink (go to wp 2)">
      <exception cond="datalink_time > 22" deroute="Standby"/>
      <go from="STDBY" hmode="route" wp="2"/>
      <go from="2" hmode="route" wp="STDBY"/>
    </block>
  </blocks>
</flight_plan>
